name: Package

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [published]

jobs:
  package:
    permissions:
      contents: write
    runs-on: ${{ matrix.OS }}
    strategy:
      matrix:
        OS: ["ubuntu-latest", "windows-latest", "macos-latest"]
        include:
          # Replace "example" with the name your binary
          - os: macOS-latest
            uploaded_filename: tgtg-x86_64-apple-darwin
            local_path: artifacts/tgtg-x86_64-apple-darwin
          - os: ubuntu-latest
            uploaded_filename: tgtg-x86_64-pc-linux
            local_path: artifacts/tgtg-x86_64-pc-linux
          - os: windows-latest
            uploaded_filename: tgtg-x86_64-pc-win32.exe
            local_path: artifacts/tgtg-x86_64-pc-win32.exe
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: VirtusLab/scala-cli-setup@v1
        with:
          power: true
          jvm: "temurin:17"
      - name: Package app
        run: scala-cli package . -o "${{ matrix.local_path }}" --native-image
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.uploaded_filename }}
          path: ${{ matrix.local_path }}
          if-no-files-found: error
          retention-days: 2
      - name: Upload release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.local_path }}
  package-docker:
    # if: github.event_name == 'release'
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
